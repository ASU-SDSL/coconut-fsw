#pragma once

#include "pico/stdlib.h"

#include <stdio.h>
#include <string.h>

#include <FreeRTOS.h>
#include <task.h>
#include <semphr.h>
#include "queue.h"
#include "gse.h"
#include "ccsds.h"
#include "log.h"
#include "steve.h"

// CCSDS payload FTP struct (bytes)
// 0x0: TX ID, all 1s if new
// 0x1: FTP operation
// 0x2 - 0x3: User creds length
// 0x4 - 0xX: User creds
// 0xX+1 - 0xX+2: Path length << only on initial packet
// 0xX+3 - 0xY: Path << only on initial packet
// 0xY+1 - 0xY+4: File size << only on initial packet, can be 0s if unknown
// Multi-byte numbers stored in big-endian

// FTP Structs and Types
typedef enum ftp_operation {
    CONTINUE = 0, // Continuation of prev. transaction
    CREATE = 1, // Create file, error if exists
    APPEND = 2, // Append to or create file
    COPY = 3, // Transmit FSW to GSE
    LIST = 4, // List files to GSE
    REMOVE = 5, // Delete file
} ftp_operation_t;

typedef struct {
    uint8_t tx_id; // Generated by FSW, unique to a transaction
    ftp_operation_t op; // Transaction operation
    uint32_t file_size; // Total size of file
    uint32_t offset; // Offset from start of file
    uint16_t path_length; // Length of file path
    uint16_t creds_length; // Length of user credentials
    char* path; // File path
    char* creds; // User credentials
} ftp_state;

/* USER FUNCTIONS */
void process_ftp(uint8_t* payload, uint32_t payload_size);
